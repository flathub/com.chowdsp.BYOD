diff --git a/modules/juce_audio_plugin_client/Standalone/juce_StandaloneFilterApp.cpp b/modules/juce_audio_plugin_client/Standalone/juce_StandaloneFilterApp.cpp
index 1f13a1d8a..cfc779795 100644
--- a/modules/juce_audio_plugin_client/juce_audio_plugin_client_Standalone.cpp
+++ b/modules/juce_audio_plugin_client/juce_audio_plugin_client_Standalone.cpp
@@ -56,7 +56,7 @@ public:
         options.filenameSuffix      = ".settings";
         options.osxLibrarySubFolder = "Application Support";
        #if JUCE_LINUX || JUCE_BSD
-        options.folderName          = "~/.config";
+        options.folderName          = File::getSpecialLocation(File::userApplicationDataDirectory).getFullPathName();
        #else
         options.folderName          = "";
        #endif
diff --git a/modules/juce_core/native/juce_linux_Files.cpp b/modules/juce_core/native/juce_linux_Files.cpp
index 38429ba69..5c7bf66fc 100644
--- a/modules/juce_core/native/juce_Files_linux.cpp
+++ b/modules/juce_core/native/juce_Files_linux.cpp
@@ -124,7 +124,16 @@ File File::getSpecialLocation (const SpecialLocationType type)
         case userMoviesDirectory:             return resolveXDGFolder ("XDG_VIDEOS_DIR",    "~/Videos");
         case userPicturesDirectory:           return resolveXDGFolder ("XDG_PICTURES_DIR",  "~/Pictures");
         case userDesktopDirectory:            return resolveXDGFolder ("XDG_DESKTOP_DIR",   "~/Desktop");
-        case userApplicationDataDirectory:    return resolveXDGFolder ("XDG_CONFIG_HOME",   "~/.config");
+        case userApplicationDataDirectory:
+        {
+            // XDG spec https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
+            const char* configDir = getenv ("XDG_CONFIG_HOME");
+            if (configDir && *configDir)
+                return File (CharPointer_UTF8 (configDir));
+
+            return File (CharPointer_UTF8 ("~/.config"));
+        }
+
         case commonDocumentsDirectory:
         case commonApplicationDataDirectory:  return File ("/opt");
         case globalApplicationsDirectory:     return File ("/usr");
